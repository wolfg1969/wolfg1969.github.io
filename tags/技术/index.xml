<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on GUOYONG.ME</title>
    <link>http://blog.guoyong.me/tags/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on GUOYONG.ME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>wolfg1969 All rights reserved.</copyright>
    <lastBuildDate>Sat, 23 Apr 2016 10:36:22 +0800</lastBuildDate>
    
	<atom:link href="http://blog.guoyong.me/tags/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django 日志过滤器实战</title>
      <link>http://blog.guoyong.me/post/2016/04/23/django-logging-filter-in-action/</link>
      <pubDate>Sat, 23 Apr 2016 10:36:22 +0800</pubDate>
      
      <guid>http://blog.guoyong.me/post/2016/04/23/django-logging-filter-in-action/</guid>
      <description>Django 的日志配置采用标准的 Python 日志配置方式，默认采用 dictConfig 的格式。Python 文档里对日志过滤器 Filter 的解释是一种控制日志记录 Record 是否输出的机制。就像物理世</description>
    </item>
    
    <item>
      <title>定制 Django REST Framework 的异常处理</title>
      <link>http://blog.guoyong.me/post/2016/04/20/django-rest-framework-custom-exception-handling/</link>
      <pubDate>Wed, 20 Apr 2016 17:06:03 +0800</pubDate>
      
      <guid>http://blog.guoyong.me/post/2016/04/20/django-rest-framework-custom-exception-handling/</guid>
      <description>今天借助修复其它 Bug 的机会，对项目中 REST API 的异常处理机制进行了优化。 项目的 REST API 是基于 Django REST Framework 实现的，之前已经按照其文档的说明，对 EXCEPTION_HANDLER 进行了定制，用统</description>
    </item>
    
  </channel>
</rss>